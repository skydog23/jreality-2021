package de.jreality.audio;

import de.jreality.scene.AudioSource;
import de.jreality.scene.data.RingBuffer;

/**
 * An audio source generated by a (time-dependent) signal function.
 * 
 * @author <a href="mailto:weissman@math.tu-berlin.de">Steffen Weissmann</a>
 *
 */
public abstract class SignalSource extends AudioSource {

	int index=0;
	
	public SignalSource(String name, int samplerate) {
		super(name);
		this.sampleRate=samplerate;
		ringBuffer = new RingBuffer(samplerate);
	}
	
	@Override
	protected void writeSamples(int n) {
		float[] buf = new float[n];
		for (int i=0; i<n; i++) {
			double t = (double)(index+i)/(double)sampleRate;
			buf[i]=evaluateSignal(t);
		}
		index+=n;
		ringBuffer.write(buf, 0, n);
	}

	/**
	 * Evaluate the signal at a given time.
	 * 
	 * @param t evaluation time in seconds
	 * @return the signal sample at time {@code t}. 
	 */
	public abstract float evaluateSignal(double t);

	@Override
	protected void reset() {
		index=0;
	}

	@Override
	protected void setParameterImpl(String name, Object value) {
		
	}


}
