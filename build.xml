<project name="jReality" default="dist" basedir=".">
  <description>
    jReality build file
  </description>
  
  <!-- the following should belong to core... -->
  <property name="core" location="src-core" />
  <property name="tools" location="src-tool" />
  <property name="io" location="src-io" />
  <property name="backends-share" location="src-backends-share" />
  <property name="ui" location="src-ui" />

  <!-- backends (dependencies from top to bottom) -->
	  <property name="soft" location="src-soft" />
	  <property name="soft-new" location="src-soft-new" />
  <property name="renderman" location="src-renderman" />
  <property name="jogl" location="src-jogl" />
  <property name="gpgpu" location="src-gpgpu" />
  <property name="portal" location="src-portal" />
  <property name="proxies" location="src-proxies" />
  <property name="swt" location="src-swt" />
  <property name="testjogl" location="test-jogl" />

  <property name="vr" location="src-vr" />
  <property name="examples" location="src-examples" />
  <property name="swing" location="src-swing" />
	
  <!-- these folders will be created -->
  <property name="build" location="build" />
  <property name="javadoc" location="docs/api" />
  <property name="lib" location="lib" />
  <property name="dist" location="dist" />

  <property environment="env"/>

  <path id="backends-share.classpath">
    <fileset dir="dist">
      <include name="jReality-core.jar"/>
    </fileset>
  </path>

  <path id="tools.classpath">
    <fileset dir="dist">
      <include name="jReality-core.jar"/>
    </fileset>
  </path>

  <path id="swing.classpath">
    <fileset dir="dist">
      <include name="jReality-core.jar"/>
      <include name="jReality-tools.jar"/>
    </fileset>
  </path>

  <path id="backend.classpath">
    <path refid="backends-share.classpath"/>
    <fileset dir="dist">
        <include name="jReality-backends-share.jar"/>
    </fileset>
  </path>

  <path id="io.classpath">
    <path refid="backend.classpath"/>
    <fileset dir="lib">
      <include name="jogl.jar"/>
      <include name="antlr-2.7.5.jar"/>
      <include name="xstream-1.2.jar"/>
      <include name="xpp3-1.1.3.4.O.jar"/>
    </fileset>
    <fileset dir="dist">
      <include name="jReality-tools.jar"/>
    </fileset>
  </path>

  <path id="ui.classpath">
    <path refid="backend.classpath"/>
    <fileset dir="dist">
        <include name="jReality-soft.jar"/>
        <include name="jReality-renderman.jar"/>
        <include name="jReality-io.jar"/>
        <include name="jReality-jogl.jar"/>
        <include name="jReality-tools.jar"/>
    </fileset>
    <fileset dir="lib">
        <include name="jtem-beans.jar"/>
        <include name="jterm.jar"/>
        <include name="bsh-1.3b2.jar"/>
    </fileset>
  </path>

  <path id="vr.classpath">
    <path refid="ui.classpath"/>
    <fileset dir="dist">
        <include name="jReality-ui.jar"/>
        <include name="jReality-swing.jar"/>
    </fileset>
  </path>

  <path id="examples.classpath">
    <path refid="vr.classpath"/>
    <fileset dir="dist">
        <include name="*.jar"/>
    </fileset>
    <fileset dir="lib">
        <include name="*.jar"/>
    </fileset>
  </path>
	
	<path id="proxies.classpath">
    <path refid="backend.classpath"/>
    <fileset dir="lib">
      <include name="smrj.jar"/>
    </fileset>
  </path>

  <path id="jogl.classpath">
    <path refid="backend.classpath"/>
    <fileset dir="lib">
      <include name="jogl.jar"/>
    </fileset>
  </path>

	<path id="gpgpu.classpath">
    <path refid="jogl.classpath"/>
    <fileset dir="dist">
      <include name="jReality-jogl.jar"/>
    </fileset>
  </path>
	
  <path id="swt.classpath">
    <path refid="jogl.classpath"/>
    <fileset dir="lib">
      <include name="swt.jar"/>
    </fileset>
    <fileset dir="dist">
        <include name="jReality-jogl.jar"/>
        <include name="jReality-tools.jar"/>
    </fileset>
  </path>

  <path id="tests.classpath">
    <path refid="proxies.classpath"/>
    <fileset dir="lib">
      <include name="alex.jar"/>
      <include name="discreteGroup.jar"/>
      <include name="junit.jar"/>
      <include name="jogl.jar"/>
    </fileset>
    <fileset dir="dist">
      <include name="jReality-io.jar"/>
      <include name="jReality-soft.jar"/>
      <include name="jReality-jogl.jar"/>
      <include name="jReality-proxies.jar"/>
    </fileset>
  </path>

  <path id="apps.classpath">
    <path refid="proxies.classpath"/>
    <fileset dir="lib">
      <include name="*.jar"/>
    </fileset>
    <fileset dir="dist">
        <include name="*.jar"/>
    </fileset>
  </path>

  <path id="portal.classpath">
    <path refid="backend.classpath"/>
    <fileset dir="lib">
      <include name="smrj.jar"/>
      <include name="jogl.jar"/>
     </fileset>
    <fileset dir="dist">
      <include name="jReality-io.jar"/>
      <include name="jReality-ui.jar"/>
      <include name="jReality-jogl.jar"/>
      <include name="jReality-soft.jar"/>
      <include name="jReality-proxies.jar"/>
      <include name="jReality-tools.jar"/>
     </fileset>
  </path>

  <target name="init">
    <!-- Create the build directory structure used by compile -->
    <mkdir dir="${build}" />
    <mkdir dir="${lib}" />
    <mkdir dir="${dist}" />
  </target>

  <!-- all the core classes will be build here - all beackends depend on it-->
  <target name="core" depends="init" description="compile the source ">
    <mkdir dir="${build}/core" />
    <javac excludesfile="excludes.txt" srcdir="${core}" destdir="${build}/core" debug="true">
      <compilerarg line="-source 1.5" />
    </javac>
    <copy todir="${build}/core">
      <fileset dir="${core}">
        <exclude name="**/*.java"/>
        <exclude name="**/*.gif"/>
      </fileset>
    </copy>
    <jar jarfile="${dist}/jReality-core.jar" basedir="${build}/core" />
  </target>

  <target name="tools" depends="core" description="compile the source ">
    <mkdir dir="${build}/tools" />
    <javac excludesfile="excludes.txt" srcdir="${tools}" destdir="${build}/tools" debug="true">
      <compilerarg line="-source 1.5" />
      <classpath refid="tools.classpath"/>
    </javac>
    <copy todir="${build}/tools">
      <fileset dir="${tools}">
        <exclude name="**/*.java"/>
        <exclude name="**/*.gif"/>
      </fileset>
    </copy>
    <jar jarfile="${dist}/jReality-tools.jar" basedir="${build}/tools" />
  </target>

  <target name="backends-share" depends="core" description="compile the backends-share">
    <mkdir dir="${build}/backends-share" />
    <javac excludesfile="excludes.txt" srcdir="${backends-share}" destdir="${build}/backends-share" debug="true">
      <compilerarg line="-source 1.5" />
      <classpath refid="backends-share.classpath"/>
    </javac>
    <jar jarfile="${dist}/jReality-backends-share.jar" basedir="${build}/backends-share" />
  </target>

  <target name="swing" depends="core" description="compile the swing widget integration">
    <mkdir dir="${build}/swing" />
    <javac excludesfile="excludes.txt" srcdir="${swing}" destdir="${build}/swing" debug="true">
      <compilerarg line="-source 1.5" />
      <classpath refid="swing.classpath"/>
    </javac>
    <jar jarfile="${dist}/jReality-swing.jar" basedir="${build}/swing" />
  </target>

  <target name="io" depends="core, tools, io-deps" description="build readers and writers">
    <mkdir dir="${build}/io" />
	  <antlr target="${io}/de/jreality/reader/vrml/vrml-v1.0.g">
	  	  <classpath refid="io.classpath"/>
	  	</antlr>
	  <antlr target="${io}/de/jreality/reader/vrml/vrml-v2.0.g">
	    <classpath refid="io.classpath"/>
	  </antlr>
	  <antlr target="${io}/de/jreality/reader/mathematica/mathematica.g">
	    <classpath refid="io.classpath"/>
	  </antlr>
    <javac excludesfile="excludes.txt" srcdir="${io}" destdir="${build}/io" debug="true">
      <compilerarg line="-source 1.5"/>
      <classpath refid="io.classpath"/>
    </javac>
    <jar jarfile="${dist}/jReality-io.jar" basedir="${build}/io"/>
  </target>
	  
  <target name="io-deps" unless="env.NO_FETCH_DEPS">
    <get dest="lib/antlr-2.7.5.jar" src="http://www.math.tu-berlin.de/~weissman/jreality-lib/antlr-2.7.5.jar" usetimestamp="true" verbose="true"/>
    <get dest="lib/xpp3-1.1.3.4.O.jar" src="http://www.math.tu-berlin.de/~weissman/jreality-lib/xpp3-1.1.3.4.O.jar" usetimestamp="true" verbose="true"/>
    <get dest="lib/xstream-1.2.jar" src="http://www.math.tu-berlin.de/~weissman/jreality-lib/xstream-1.2.jar" usetimestamp="true" verbose="true"/>
  </target>

  <target name="ui-deps" unless="env.NO_FETCH_DEPS">
    <get dest="lib/jtem-beans.jar" src="http://www.math.tu-berlin.de/~weissman/jreality-lib/jtem-beans.jar" usetimestamp="true" verbose="true"/>
    <get dest="lib/bsh-1.3b2.jar" src="http://www.math.tu-berlin.de/~weissman/jreality-lib/bsh-1.3b2.jar" usetimestamp="true" verbose="true"/>
    <get dest="lib/jterm.jar" src="http://www.math.tu-berlin.de/~weissman/jreality-lib/jterm.jar" usetimestamp="true" verbose="true"/>
  </target>

  <target name="ui" depends="core, tools, io, ui-deps" description="compile the ui">
    <mkdir dir="${build}/ui" />
    <javac excludesfile="excludes.txt" srcdir="${ui}" destdir="${build}/ui" debug="true">
      <compilerarg line="-source 1.5" />
      <classpath refid="ui.classpath"/>
    </javac>
    <copy todir="${build}/ui">
      <fileset dir="src-ui">
        <exclude name="**/*.java"/>
      </fileset>
    </copy>
    <jar jarfile="${dist}/jReality-ui.jar" basedir="${build}/ui" />
  </target>

  <target name="vr" depends="core, ui, swing" description="compile vr">
    <mkdir dir="${build}/vr" />
    <javac excludesfile="excludes.txt" srcdir="${vr}" destdir="${build}/vr" debug="true">
      <compilerarg line="-source 1.5" />
      <classpath refid="vr.classpath"/>
    </javac>
    <copy todir="${build}/vr">
      <fileset dir="src-vr">
        <exclude name="**/*.java"/>
      </fileset>
    </copy>
    <jar jarfile="${dist}/jReality-vr.jar" basedir="${build}/vr" />
  </target>

	<target name="examples" depends="vr" description="compile the examples">
    <mkdir dir="${build}/examples" />
    <javac excludesfile="excludes.txt" srcdir="${examples}" destdir="${build}/examples" debug="true">
      <compilerarg line="-source 1.5" />
      <classpath refid="examples.classpath"/>
    </javac>
    <copy todir="${build}/examples">
      <fileset dir="src-examples">
        <exclude name="**/*.java"/>
      </fileset>
    </copy>
    <jar jarfile="${dist}/jReality-examples.jar" basedir="${build}/examples" />
  </target>
	
	
  <target name="proxies" depends="core, proxies-deps" description="compile the proxies">
    <mkdir dir="${build}/proxies" />
    <javac excludesfile="excludes.txt" srcdir="${proxies}" destdir="${build}/proxies" debug="true">
      <compilerarg line="-source 1.5" />
      <classpath refid="proxies.classpath"/>
    </javac>
    <jar jarfile="${dist}/jReality-proxies.jar" basedir="${build}/proxies" />
  </target>

  <target name="proxies-deps" unless="env.NO_FETCH_DEPS">
    <get dest="lib/smrj.jar" src="http://www.math.tu-berlin.de/~weissman/jreality-lib/smrj.jar" usetimestamp="true" verbose="true"/>
  </target>

  <target name="soft" depends="backends-share" description="build soft backend">
  <mkdir dir="${build}/soft" />
    <javac excludesfile="excludes.txt" srcdir="${soft}:${soft-new}" destdir="${build}/soft" debug="true">
      <compilerarg line="-source 1.5" />
      <classpath refid="backend.classpath"/>
    </javac>
    <jar jarfile="${dist}/jReality-soft.jar" basedir="${build}/soft" />
  </target>
  
  <target name="jogl" depends="backends-share, proxies, jogl-deps" description="build jogl backend">
    <mkdir dir="${build}/jogl" />
    <javac excludesfile="excludes.txt" srcdir="${jogl}"  destdir="${build}/jogl" debug="true">
      <compilerarg line="-source 1.5" />
      <classpath refid="jogl.classpath"/>
    </javac>
    <copy todir="build/jogl"> <!-- copy shader progs -->
      <fileset dir="${jogl}">
        <exclude name="**/*.java"/>
        <exclude name="**/*.gif"/>
      </fileset>
    </copy>
    <jar jarfile="${dist}/jReality-jogl.jar" basedir="${build}/jogl" />
  </target>

  <target name="gpgpu" depends="jogl" description="build gpgpu backend">
    <mkdir dir="${build}/gpgpu" />
    <javac excludesfile="excludes.txt" srcdir="${gpgpu}"  destdir="${build}/gpgpu" debug="true">
      <compilerarg line="-source 1.5" />
      <classpath refid="gpgpu.classpath"/>
    </javac>
    <copy todir="build/gpgpu"> <!-- copy shader progs -->
      <fileset dir="${gpgpu}">
        <exclude name="**/*.java"/>
        <exclude name="**/*.gif"/>
      </fileset>
    </copy>
    <jar jarfile="${dist}/jReality-gpgpu.jar" basedir="${build}/gpgpu" includes="de/jreality/jogl/**"/>
  </target>

	<!--target name="testjogl" depends="core, soft, jogl, jogl-deps" description="build jogl tests">
    <mkdir dir="${build}/testjogl" />
    <javac excludesfile="excludes.txt" srcdir="${testjogl}"  destdir="${build}/testjogl" debug="true">
      <compilerarg line="-source 1.5" />
      <classpath refid="tests.classpath"/>
    </javac>
    <jar jarfile="${dist}/jReality-testjogl.jar" basedir="${build}/testjogl" />
  </target-->

  <target name="jogl-deps" unless="env.NO_FETCH_DEPS">
    <get dest="lib/jogl.jar" src="http://www.math.tu-berlin.de/~weissman/jreality-lib/jogl.jar" usetimestamp="true" verbose="true"/>
  </target>

  <target name="swt" depends="jogl, tools" description="build swt viewer for the jogl backend">
    <mkdir dir="${build}/swt" />
    <javac excludesfile="excludes.txt" srcdir="${swt}"  destdir="${build}/swt" debug="true">
      <compilerarg line="-source 1.5" />
      <classpath refid="swt.classpath"/>
    </javac>
    <jar jarfile="${dist}/jReality-swt.jar" basedir="${build}/swt" />
  </target>

  <target name="renderman" depends="core,soft" description="build renderman backend">
    <mkdir dir="${build}/renderman" />
    <javac excludesfile="excludes.txt" srcdir="${renderman}" destdir="${build}/renderman" debug="true">
      <compilerarg line="-source 1.5"/>
      <classpath refid="backend.classpath"/>
    </javac>
    <jar jarfile="${dist}/jReality-renderman.jar" basedir="${build}/renderman" />
  </target>

  <target name="portal" depends="ui,jogl,soft,proxies" description="build portal backend">
    <mkdir dir="${build}/portal" />
    <javac excludesfile="excludes.txt" srcdir="${portal}" destdir="${build}/portal" debug="true">
      <classpath refid="portal.classpath"/>
    </javac>
    <rmic base="${build}/portal" includes="**/*Impl.class" classpath="${dist}/jReality-core.jar:${dist}/jReality-jogl.jar:${dist}/jReality-stubs.jar:${dist}/jReality-proxies.jar" />
    <jar jarfile="${dist}/jReality-portal.jar" basedir="${build}/portal" />
  </target>

  <target name="javadoc" description="generate javadoc in docs/api">
      <mkdir dir="${javadoc}" />
    <javadoc destdir="${javadoc}" access="public" author="true" version="true" use="true" windowtitle="jReality API" source="1.5">
      <fileset dir="${core}" defaultexcludes="yes">
        <include name="de/jreality/**/*.java" />
      </fileset>
      <fileset dir="${tools}" defaultexcludes="yes">
        <include name="de/jreality/**/*.java" />
      </fileset>
      <fileset dir="${io}" defaultexcludes="yes">
        <include name="de/jreality/**/*.java" />
      	<exclude name="de/jreality/reader/*/*.java" />
      	<exclude name="de/jreality/reader/*/**/*.java" />
      </fileset>
      <fileset dir="${ui}" defaultexcludes="yes">
        <include name="de/jreality/**/*.java" />
      </fileset>
      <fileset dir="${vr}" defaultexcludes="yes">
        <include name="de/jreality/**/*.java" />
      </fileset>
      <link href="http://java.sun.com/j2se/1.5/docs/api/"/>
    </javadoc>
  </target>
	
  <target name="dist" depends="core,io,jogl,soft,renderman,portal,gpgpu,examples" description="generate the distribution">
  </target>

  <target name="release" depends="dist, javadoc" description="generate a big jar that contains all classes needed for the tutorial">
  	<mkdir dir="release" />
  	
    <jar jarfile="release/jReality.jar">
      <fileset dir="${build}/core" />
      <fileset dir="${build}/tools" />
      <fileset dir="${build}/backends-share" />
      <fileset dir="${build}/io" />
      <fileset dir="${build}/ui" />
      
      <fileset dir="${build}/soft" />
      <fileset dir="${build}/renderman" />
      <fileset dir="${build}/jogl" />
    	
      <fileset dir="${build}/proxies" />
  	  <fileset dir="${build}/portal" />
    	
  	  <!--fileset dir="${swt}" /-->
      <fileset dir="${build}/gpgpu" />
      <fileset dir="${build}/swing" />
      <fileset dir="${build}/vr" />

      <fileset dir="${build}/examples">
      	<exclude name="**/SwtExample*"/>
      </fileset>
    </jar>
  	
  	<mkdir dir="release/tmp/src" />

  	<copy todir="release/tmp/src">
        <fileset dir="${core}" />
        <fileset dir="${tools}" />
        <fileset dir="${backends-share}" />
        <fileset dir="${io}" />
        <fileset dir="${ui}" />

  		<fileset dir="${soft}" />
  		<fileset dir="${soft-new}" />
        <fileset dir="${renderman}" />
        <fileset dir="${jogl}" />

  		<fileset dir="${proxies}" />
  	    <fileset dir="${portal}" />
  		
  	    <!--fileset dir="${swt}" /-->
        <fileset dir="${gpgpu}" />
  		<fileset dir="${swing}" />
  		<fileset dir="${vr}" />
  		
  		<fileset dir="${examples}">
  	      <exclude name="**/SwtExample*"/>
  	    </fileset>
  	</copy>

  	<zip destfile="release/jReality-src.zip" basedir="release/tmp"/>

  	<delete dir="release/tmp" />

  	<mkdir dir="release/tmp/javadoc" />
  	<copy todir="release/tmp/javadoc">
  		<fileset dir="${javadoc}" />
  	</copy>
  	<zip destfile="release/jReality-javadoc.zip" >
  		<fileset dir="release/tmp" />
  	</zip>
  	
  	<delete dir="release/tmp"/>

  	<mkdir dir="release/tmp/lib" />
  	<copy file="${lib}/antlr-2.7.5.jar" todir="release/tmp/lib" />
  	<copy file="${lib}/jtem-beans.jar" todir="release/tmp/lib" />
  	<copy file="${lib}/bsh-1.3b2.jar" todir="release/tmp/lib" />
  	<copy file="${lib}/jterm.jar" todir="release/tmp/lib" />
  	<copy file="${lib}/jtem-beans.jar" todir="release/tmp/lib" />
  	<copy file="${lib}/smrj.jar" todir="release/tmp/lib" />
  	<copy file="${lib}/xstream-1.2.jar" todir="release/tmp/lib" />
  	<copy file="${lib}/xpp3-1.1.3.4.O.jar" todir="release/tmp/lib" />
  	<copy todir="release/tmp/lib">
  		<fileset dir="3rd-party" />
  	</copy>
  	<zip destfile="release/jReality-3rd-party.zip" >
  		<fileset dir="release/tmp" />
  	</zip>

  	<delete dir="release/tmp"/>
  
  	<mkdir dir="release/tmp/tutorial" />
	<copy todir="release/tmp/tutorial">
  		<fileset dir="src-tutorial" />
  	</copy>
  	<zip destfile="release/jReality-tutorial.zip" basedir="release/tmp"/>
  	<delete dir="release/tmp"/>

  </target>

  <target name="check_cvs" description="check the current cvs state">
	<mkdir dir="check_cvs_tmp"/>
  	<cvs cvsroot="${env.CVSROOT}" package="jReality" dest="check_cvs_tmp"/>
    <ant dir="check_cvs_tmp/jReality" inheritall="false">
    	  <property name="env.NO_FETCH_DEPS" value="1"/>
    </ant>
    <delete dir="check_cvs_tmp"/>
  </target>

  <target name="viewer-deps" unless="env.NO_FETCH_DEPS">
    <get dest="lib/kunststoff.jar" src="http://www.math.tu-berlin.de/~weissman/jreality-lib/kunststoff.jar" usetimestamp="true" verbose="true"/>
  </target>

  <target name="viewer" depends="dist,viewer-deps" description="launch a standalone viewer">
    <java classname="de.jreality.ui.viewerapp.ViewerAppOld" maxmemory="1024M" failonerror="true" fork="true">
      <classpath>
      	<path refid="apps.classpath"/>
      	<pathelement path="${java.class.path}"/>
      </classpath>
    </java>
  </target>
  
  <target name="tutorial-src" description="create a zip file containing tutorial src">
	<zip destfile="${dist}/tutorial.zip" basedir="." includes="src-tutorial/**/*" defaultexcludes="yes"/>
  </target>
  	
  <target name="clean" description="clean up">
    <delete dir="${build}" />
    <delete dir="${dist}" />
    <delete dir="${javadoc}"/>
  </target>

</project>
